This trigger raises an error when we try to add tickets that would go over the venue's capacity for one event.

CREATE TRIGGER checkTickets \
BEFORE INSERT on Ticket \
REFERENCING NEW as n \
FOR EACH ROW \
WHEN((SELECT count(*) FROM Ticket t WHERE (n.venue_id = t.venue_id) AND (n.event_id = t.event_id)) >= (SELECT Capacity FROM Venue WHERE (n.venue_id = Venue.venue_id))) \
SIGNAL SQLSTATE '75000' SET MESSAGE_TEXT='Can not have more tickets than capacity'

This trigger prevents two tickets from being in the same seat for the same event.
CREATE TRIGGER checkSeat \
BEFORE INSERT on Ticket \
REFERENCING NEW as n \
FOR EACH ROW \
WHEN((n.venue_id = venue_id) AND (n.seat_id = seat_id)) \
SIGNAL SQLSTATE '75000' SET MESSAGE_TEXT='Can not have a ticket with the same venue and seat'

This trigger will check/update the Venue's capacity based on how many seats exist for corresponding venue.
CREATE TRIGGER updateCapacity
AFTER INSERT on Seat
Referencing new as nSeat
for each row
begin atomic
UPDATE venue v SET Capacity = (Select count(*) from Seat s where s.venue_id = v.venue_id group by Venue_id)
end